{"version":3,"sources":["containers/App.css","components/UI/Spinner/Spinner.css","hoc/Layout/Layout.css","components/List/List.css","components/GenderGraph/GenderGraph.css","components/Header/Header.css","store/actions/actionTypes.js","store/reducers/list.js","axios-rick-morty.js","store/actions/list.js","store/sagas/list.js","store/sagas/index.js","context/app-context.js","components/UI/Spinner/Spinner.js","components/UI/Card/Card.js","containers/List/ListBuilder.js","components/List/List.js","components/Detail/Detail.js","containers/Detail/DetailBuilder.js","components/UI/Charts/ApexChart.js","containers/GenderGraph/GraphBuilder.js","components/GenderGraph/GenderGraph.js","components/Header/Header.js","containers/Header/HeaderBuilder.js","hoc/Layout/Layout.js","containers/App.js","serviceWorker.js","index.js","components/Detail/Detail.css","components/UI/Card/Card.css"],"names":["module","exports","App","Loader","load2","Layout","List","GenderGraph","Header","AUTO_INIT_LIST","LIST_PROCESS","initialState","isLoading","loaded","error","info","results","list","listReducer","state","arguments","length","undefined","action","type","listInit","Object","objectSpread","listSuccess","listFail","axios_rick_morty","axios","baseURL","listProcess","page","actionTypes","data","listProcessSaga","autoInitListSaga","response","regenerator_default","a","wrap","_context","prev","next","put","actions","sent","t0","message","stop","_marked","_context2","_marked2","watchList","takeEvery","sagas_marked","app_context","React","characterId","setCharacterId","currentPage","setCurrentPage","showDrawer","setShowDrawer","Spinner_Spinner","spinner","react_default","createElement","className","classes","Meta","Card","Card_Card","_React$Component","CardComp","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","maxWidth","window","card","style","margin","bodyStyle","padding","cover","avatar","shape","size","src","props","img","Cover","Avatar","title","description","switch","Component","connect","mapStateToProps","characters","ListBuilder","_useContext","useContext","ScreenWidth","innerWidth","console","avatarsArr","character","id","image","es_switch","checked","onChange","event","showDetails","val","Number","listStyle","display","flexDirection","components_List_List","row","col","span","List_ListBuilder","components_Detail_Detail","Detail","detailData","Fragment","alt","name","marginLeft","Spec","species","location","gender","detailDrawer","drawer","ShowDrawer","height","placement","closable","onClose","visible","Drawer","DetailBuilder","onCloseDrawer","PropTypes","mapStateToprops","DetailBuilder_DetailBuilder","ApexChart","width","react_apexcharts_min_default","options","series","GraphBuilder","_useState","useState","plotOptions","bar","horizontal","distributed","yaxis","labels","dataLabels","enabled","fontSize","colors","xaxis","trim","categories","theme","mode","palette","_useState2","slicedToArray","chartData","setChartData","react","countGender","male","female","unknown","element","newSeries","updatedSeries","components_GenderGraph_GenderGraph","GenderGraph_GraphBuilder","components_Header_Header","es_button","Group","disabled","firstPage","onClick","icon","lastPage","total","totalPages","mapDispatchToProps","dispatch","listProcessHandler","HeaderBuilder","count","pages","changePage","onChangePage","hoc_Layout_Layout","Header_HeaderBuilder","Detail_DetailBuilder","autoInitListHandler","startId","_useState3","_useState4","_useState5","_useState6","Provider","setId","setPage","setDrawer","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","composeEnhancers","redux","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","redux_thunk_es","app","es","src_containers_App","ReactDOM","document","URL","process","href","publicUrl","origin","concat","fetch","contentType","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bb28ef2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List__List__1YcFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GenderGraph\":\"GenderGraph__GenderGraph__CxS59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__oE2FH\"};","export const AUTO_INIT_LIST = 'AUTO_INIT_LIST'\r\nexport const LIST_INIT = 'LIST_INIT'\r\nexport const LIST_PROCESS = 'LIST_PROCESS'\r\nexport const LIST_SUCCESS = 'LIST_SUCCESS'\r\nexport const LIST_FAIL = 'LIST_FAIL'\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    loaded: false,\r\n    error: false,    \r\n    info: {},\r\n    results: []\r\n};\r\n\r\nconst listInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: true\r\n    }\r\n};\r\nconst listSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        info: action.data.info,\r\n        results: action.data.results\r\n    }\r\n};\r\nconst listFail = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        error: action.data.error\r\n    }\r\n};\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LIST_INIT: return listInit(state, action);\r\n        case actionTypes.LIST_SUCCESS: return listSuccess(state, action);\r\n        case actionTypes.LIST_FAIL: return listFail(state, action);\r\n        default: return state\r\n    }\r\n};\r\nexport default listReducer","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api/character/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\n\r\nexport const autoInitList = () => {\r\n    return {\r\n        type: actionTypes.AUTO_INIT_LIST\r\n    };\r\n};\r\nexport const listInit = () => {\r\n    return {\r\n        type: actionTypes.LIST_INIT\r\n    };\r\n};\r\nexport const listProcess = page => {\r\n    return {\r\n        type: actionTypes.LIST_PROCESS,\r\n        page\r\n    };\r\n};\r\nexport const listSuccess = data => {\r\n    return {\r\n        type: actionTypes.LIST_SUCCESS,\r\n        data\r\n    };\r\n};\r\nexport const listFail = error => {\r\n    return {\r\n        type: actionTypes.LIST_FAIL,\r\n        error\r\n    };\r\n};","import { put } from \"redux-saga/effects\";\r\nimport axios from \"../../axios-rick-morty\";\r\nimport * as actions from \"../actions\";\r\n\r\nexport function* listProcessSaga(action) {\r\n    yield put(actions.listInit());\r\n    try {\r\n        const response = yield axios.get(action.page);        \r\n        yield put(actions.listSuccess(response.data))\r\n    }\r\n    catch(error) {\r\n        yield put(actions.listFail(error.message));\r\n    }\r\n}\r\nexport function* autoInitListSaga() {\r\n    yield put(actions.listProcess());\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\nimport {listProcessSaga, autoInitListSaga} from './list';\r\n\r\nexport function* watchList () {\r\n    yield takeEvery(actionTypes.AUTO_INIT_LIST, autoInitListSaga)\r\n    yield takeEvery(actionTypes.LIST_PROCESS, listProcessSaga);\r\n};","import React from 'react';\r\nconst appContext = React.createContext({\r\n    characterId: null,\r\n    setCharacterId: () => {},\r\n    currentPage: null,\r\n    setCurrentPage: () => {},\r\n    showDrawer: false,\r\n    setShowDrawer: () => {}\r\n});\r\nexport default appContext;","import React from 'react';\r\n\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport { Card, Avatar } from 'antd';\r\nimport classes from './Card.css';\r\nconst { Meta } = Card;\r\nconst env = process.env.NODE_ENV === 'development';\r\n\r\nexport class CardComp extends React.Component {\r\n\r\n    render() {\r\n        const maxWidth = window.innerWidth >= 992\r\n        return (\r\n            <Card\r\n                className={classes.Card}\r\n                style={!env && maxWidth ? { margin: '0.6rem 2.5rem 0 3rem'} : null}\r\n                bodyStyle={{ padding: 10 }}\r\n                cover={ \r\n                    <Avatar shape=\"square\" size={54} src={this.props.img} className={classes.Cover}/>\r\n                }>\r\n                <Meta\r\n                    avatar={\r\n                        <Avatar shape=\"square\" size={54} src={this.props.img} className={classes.Avatar}/>\r\n                    }\r\n                    title=\"Show details\"\r\n                    description={this.props.switch}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n};\r\nexport default CardComp","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport Card from '../../components/UI/Card/Card';\r\nimport {Switch} from 'antd';\r\n\r\nexport const ListBuilder = props => {\r\n    const {characterId, setCharacterId, setShowDrawer} = useContext(AppContext);    \r\n    const ScreenWidth = window.innerWidth;\r\n    console.log(ScreenWidth);\r\n    const showDetails = (val) => {        \r\n        val = Number(val);\r\n        if (ScreenWidth < 992) {\r\n             setCharacterId(val);\r\n             setShowDrawer(true)\r\n             return\r\n            }\r\n        val === characterId ? setCharacterId(null) : setCharacterId(val)\r\n        \r\n    };    \r\n    const avatarsArr = props.characters.map(character => {\r\n        return <li \r\n            key={character.id}\r\n            id={character.id}>\r\n            <Card\r\n                img={character.image}\r\n                switch = {\r\n                    <Switch\r\n                        id={character.id}\r\n                        checked ={characterId === character.id }\r\n                        onChange={(checked, event) => showDetails(event.target.id)}\r\n                    />\r\n                }\r\n            />\r\n        </li>\r\n    });\r\n    return(\r\n        <ul style={{listStyle: 'none', padding: 0, display: 'flex', flexDirection: 'column'}}>\r\n            {avatarsArr}\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(ListBuilder)","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport ListBuilder from '../../containers/List/ListBuilder';\r\nimport classes from './List.css'\r\nconst env = process.env.NODE_ENV === 'development';\r\n\r\nconst List = () => (\r\n    <Row >\r\n      <Col className={classes.List} span={24} >\r\n          <div style={!env ? {margin: '0 1rem'}: null}>\r\n            <h2>Characters list</h2>\r\n          </div>\r\n          <ListBuilder />\r\n      </Col>      \r\n    </Row>\r\n);\r\nexport default List","import React from 'react';\r\nimport { Row, Col, Drawer } from 'antd';\r\n\r\nimport classes from './Detail.css';\r\nconst env = process.env.NODE_ENV === 'development';\r\nconst Detail = props => {   \r\n    const detailData = (\r\n        <React.Fragment>\r\n            <img src={props.img} alt={props.name} style={!env ? {marginLeft: '1rem'} : null}/>\r\n            <div className={classes.Spec}>\r\n                <h1>Character details</h1>\r\n                <h4>Name:</h4>\r\n                <h3>{props.name}</h3>\r\n                <h4>Species:</h4>\r\n                <h3>{props.species}</h3>\r\n                <h4>Location:</h4>\r\n                <h3>{props.location}</h3>\r\n                <h4>Gender:</h4>\r\n                <h3>{props.gender}</h3>\r\n            </div>\r\n        </React.Fragment>        \r\n    );\r\n    const detailDrawer = (\r\n        <Drawer className={classes.ShowDrawer}\r\n          height='80%'         \r\n          placement=\"bottom\"\r\n          closable={false}\r\n          onClose={props.onClose}\r\n          visible={props.showDrawer || props.showDrawer !== undefined}\r\n          >\r\n            <div className={classes.Drawer}>\r\n                {detailData}  \r\n            </div>        \r\n        </Drawer>\r\n    );\r\n    return (\r\n        <Row >\r\n        <Col span={24} className={classes.Detail} style={{display: 'flex'}}>\r\n            {detailDrawer}\r\n            {detailData}\r\n        </Col>      \r\n  </Row>\r\n    )\r\n}\r\n\r\nexport default Detail","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport Detail from '../../components/Detail/Detail';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const DetailBuilder = props => {\r\n    const {characterId, setCharacterId, showDrawer, setShowDrawer} = useContext(AppContext);  \r\n    const character = props.characters.find(character => character.id === characterId);\r\n    const onCloseDrawer = () => {        \r\n        setShowDrawer(false);\r\n        setCharacterId(null);\r\n    }   \r\n    return (\r\n        !characterId || !props.loaded ? <Detail /> :\r\n        <Detail\r\n        img={character.image}\r\n        name={character.name}\r\n        species={character.species}\r\n        location={character.location.name}\r\n        gender={character.gender}        \r\n        onClose={onCloseDrawer}\r\n        showDrawer={showDrawer}\r\n        />\r\n    )\r\n};\r\n\r\nDetailBuilder.contextTypes = {\r\n    characterId: PropTypes.number,\r\n  };\r\n\r\nconst mapStateToprops = state => {\r\n    return {\r\n        characters : state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n};\r\nexport default connect(mapStateToprops)(DetailBuilder)","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartRender extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\" style={{ width: \"98%\" }}>\r\n                        <Chart\r\n                            options={this.props.options}\r\n                            series={this.props.series}\r\n                            type={this.props.type}\r\n                            height={this.props.height}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ChartRender;","import React , {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Chart from '../../components/UI/Charts/ApexChart';\r\n\r\nexport const GraphBuilder = props => {\r\n    const [chartData, setChartData] = useState({\r\n        options: {            \r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                    distributed: true\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontSize: '16px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {                \r\n                labels: {\r\n                    trim: false,                    \r\n                },\r\n                categories: [\"Male\", \"Female\", \"Unknown\"]\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },           \r\n        series: [\r\n            {\r\n                name: \"Quantity\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    const countGender = () => {\r\n        let male = 0,\r\n            female = 0,\r\n            unknown =0\r\n        \r\n        props.characters.forEach(element => {            \r\n            if(element.gender === 'Male') male++\r\n            if(element.gender === 'Female') female++\r\n            if(element.gender === 'unknown') unknown++\r\n        });\r\n        const newSeries = [male,female,unknown]\r\n        const updatedSeries = [{\r\n            ...chartData.series[0],\r\n            data: newSeries\r\n        }];\r\n        setChartData({options: chartData.options, series: updatedSeries})\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.loaded) countGender()\r\n        // eslint-disable-next-line\r\n    }, [])    \r\n    return(\r\n        <Chart \r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"250\"\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(GraphBuilder)\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport classes from './GenderGraph.css';\r\nimport GraphBuilder from '../../containers/GenderGraph/GraphBuilder';\r\n\r\nconst GenderGraph = () => (\r\n    \r\n    <Row >\r\n        <Col span={24} className={classes.GenderGraph} >\r\n            <GraphBuilder />\r\n            <h4>This section displays the current List’s gender totals.</h4>\r\n        </Col>      \r\n  </Row>\r\n);\r\nexport default GenderGraph","import React from 'react'\r\nimport classes from './Header.css';\r\nimport { Button, Icon } from 'antd';\r\n\r\nconst Header = props => (\r\n    <div className={classes.Header}>\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>        \r\n        <div>\r\n            <Button.Group >\r\n                <Button\r\n                    type=\"dashed\"\r\n                    disabled={props.firstPage}\r\n                    onClick={() => props.changePage(null, 'prev')}>\r\n                    <Icon type=\"left\" />\r\n                    Prev\r\n                </Button>\r\n                <Button\r\n                    type=\"dashed\"\r\n                    disabled={props.lastPage}\r\n                    onClick={() => props.changePage('next')}>\r\n                    Next\r\n                    <Icon type=\"right\" />\r\n                </Button>\r\n            </Button.Group>\r\n        </div>\r\n        <div>\r\n            <span>Total characters:</span>\r\n            <span>{props.total}</span>\r\n            <span>Total pages:</span>\r\n            <span>{props.totalPages}</span>\r\n            <span>Current page:</span>\r\n            <span>{props.currentPage}</span>\r\n        </div>        \r\n    </div>\r\n);\r\nexport default Header","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport * as actions from '../../store/actions';\r\nimport Header from '../../components/Header/Header';\r\n\r\nexport const HeaderBuilder = props => {\r\n    const {currentPage, setCurrentPage, setCharacterId} = useContext(AppContext);\r\n    const maxWidth = window.innerWidth >= 992;\r\n    const onChangePage = (next, prev) => {\r\n        if(next) {\r\n            props.listProcessHandler(`?page=${currentPage + 1}`);\r\n            if (maxWidth) setCharacterId((currentPage + 1) * 20 - 19);\r\n            setCurrentPage(currentPage +1);\r\n        };\r\n        if(prev) {\r\n            props.listProcessHandler(`?page=${currentPage - 1}`);\r\n            if (maxWidth) setCharacterId((currentPage - 1) * 20 - 19);\r\n            setCurrentPage(currentPage -1);           \r\n        };\r\n    };\r\n    return (\r\n        <Header \r\n            title=\"THE RICK AND MORTY API\"\r\n            total={props.info.count}\r\n            currentPage={currentPage}\r\n            totalPages={props.info.pages} \r\n            changePage={onChangePage}\r\n            firstPage = {currentPage - 1 === 0}\r\n            lastPage = {props.info.pages - currentPage === 0}\r\n        />\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return{\r\n        info: state.listReducer.info\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        listProcessHandler: (page) => dispatch(actions.listProcess(page))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderBuilder)","import React from 'react';\r\nimport classes from './Layout.css';\r\nimport List from '../../components/List/List';\r\nimport Detail from '../../containers/Detail/DetailBuilder';\r\nimport GenderGraph from '../../components/GenderGraph/GenderGraph';\r\nimport Header from '../../containers/Header/HeaderBuilder';\r\n\r\nconst Layout = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className={classes.Layout}>\r\n                    <List />\r\n                <div>\r\n                    <Detail />\r\n                    <GenderGraph />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Layout;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/actions';\nimport AppContext from '../context/app-context';\nimport classes from './App.css';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Layout from '../hoc/Layout/Layout';\n\nexport const App = props => {\n  \n  useEffect(()=> {\n    props.autoInitListHandler()\n    // eslint-disable-next-line\n  }, []);\n  const ScreenWidth = window.innerWidth;\n  let startId = 1;\n\n  if(ScreenWidth <= 992) startId = null;\n  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [characterId, setCharacterId] = useState(startId);\n  const [showDrawer, setShowDrawer] = useState(false)\n\n  const setId = (id) => setCharacterId(id);\n  const setPage = (page) => setCurrentPage(page);\n  const setDrawer = (val) => setShowDrawer(val);\n    \n  return (\n    <div className={classes.App} >\n      {props.isLoading ? <Spinner /> : \n      <AppContext.Provider value={{\n        characterId,\n        setCharacterId: setId,\n        currentPage,\n        setCurrentPage: setPage,\n        showDrawer,\n        setShowDrawer: setDrawer\n        }}>\n        <Layout />\n      </AppContext.Provider>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.listReducer.isLoading\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoInitListHandler: ()=> dispatch(actions.autoInitList())\n  }\n};\nexport default connect(mapStateToProps ,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport listReducer from './store/reducers/list';\nimport {watchList} from './store/sagas';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({listReducer});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchList);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Detail\":\"Detail__Detail__28Up6\",\"Spec\":\"Detail__Spec__35t1n\",\"Drawer\":\"Detail__Drawer__39JRc\",\"ShowDrawer\":\"Detail__ShowDrawer__1Vjis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card__Card__3AYzi\",\"Cover\":\"Card__Cover__3zJJV\",\"Avatar\":\"Card__Avatar__1lpa5\"};"],"sourceRoot":""}