{"version":3,"sources":["containers/App.css","components/UI/Spinner/Spinner.css","hoc/Layout/Layout.css","components/List/List.css","components/GenderGraph/GenderGraph.css","components/Header/Header.css","store/actions/actionTypes.js","store/reducers/list.js","axios-rick-morty.js","store/actions/list.js","store/sagas/list.js","store/sagas/index.js","context/app-context.js","components/UI/Spinner/Spinner.js","components/UI/Card/Card.js","containers/List/ListBuilder.js","components/List/List.js","components/Detail/Detail.js","containers/Detail/DetailBuilder.js","components/UI/Charts/ApexChart.js","containers/GenderGraph/GraphBuilder.js","components/GenderGraph/GenderGraph.js","components/Header/Header.js","containers/Header/HeaderBuilder.js","hoc/Layout/Layout.js","containers/App.js","serviceWorker.js","index.js","components/Detail/Detail.css"],"names":["module","exports","App","Loader","load2","Layout","List","GenderGraph","Header","AUTO_INIT_LIST","LIST_PROCESS","initialState","isLoading","loaded","error","info","results","list","listReducer","state","arguments","length","undefined","action","type","listInit","Object","objectSpread","listSuccess","listFail","axios_rick_morty","axios","baseURL","listProcess","page","actionTypes","data","listProcessSaga","autoInitListSaga","response","regenerator_default","a","wrap","_context","prev","next","put","actions","sent","t0","message","stop","_marked","_context2","_marked2","watchList","takeEvery","sagas_marked","app_context","React","characterId","setCharacterId","currentPage","setCurrentPage","Spinner_Spinner","spinner","react_default","createElement","className","classes","Meta","Card","_React$Component","CardComp","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","card","style","width","margin","bodyStyle","padding","avatar","shape","size","src","props","img","title","description","switch","Component","connect","mapStateToProps","characters","ListBuilder","_useContext","useContext","avatarsArr","character","id","image","es_switch","checked","onChange","event","val","Number","showDetails","listStyle","components_List_List","row","col","span","List_ListBuilder","components_Detail_Detail","Detail","display","alt","name","Spec","species","location","gender","mapStateToprops","DetailBuilder","ApexChart","react_apexcharts_min_default","options","series","height","GraphBuilder","_useState","useState","plotOptions","bar","horizontal","distributed","yaxis","labels","maxWidth","dataLabels","enabled","fontSize","colors","xaxis","trim","categories","theme","mode","palette","_useState2","slicedToArray","chartData","setChartData","useEffect","countGender","male","female","unknown","element","newSeries","updatedSeries","components_GenderGraph_GenderGraph","GenderGraph_GraphBuilder","components_Header_Header","es_button","Group","disabled","firstPage","onClick","icon","lastPage","total","totalPages","mapDispatchToProps","dispatch","listProcessHandler","HeaderBuilder","count","pages","changePage","onChangePage","hoc_Layout_Layout","Fragment","Header_HeaderBuilder","Detail_DetailBuilder","autoInitListHandler","react","_useState3","_useState4","Provider","setId","setPage","isLocalhost","Boolean","window","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","composeEnhancers","redux","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","redux_thunk_es","app","es","src_containers_App","ReactDOM","document","URL","process","href","publicUrl","origin","concat","fetch","contentType","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1fe5807a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List__List__1YcFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GenderGraph\":\"GenderGraph__GenderGraph__CxS59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__oE2FH\"};","export const AUTO_INIT_LIST = 'AUTO_INIT_LIST'\r\nexport const LIST_INIT = 'LIST_INIT'\r\nexport const LIST_PROCESS = 'LIST_PROCESS'\r\nexport const LIST_SUCCESS = 'LIST_SUCCESS'\r\nexport const LIST_FAIL = 'LIST_FAIL'\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    loaded: false,\r\n    error: false,    \r\n    info: {},\r\n    results: []\r\n};\r\n\r\nconst listInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: true\r\n    }\r\n};\r\nconst listSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        info: action.data.info,\r\n        results: action.data.results\r\n    }\r\n};\r\nconst listFail = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        error: action.data.error\r\n    }\r\n};\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LIST_INIT: return listInit(state, action);\r\n        case actionTypes.LIST_SUCCESS: return listSuccess(state, action);\r\n        case actionTypes.LIST_FAIL: return listFail(state, action);\r\n        default: return state\r\n    }\r\n};\r\nexport default listReducer","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api/character/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\n\r\nexport const autoInitList = () => {\r\n    return {\r\n        type: actionTypes.AUTO_INIT_LIST\r\n    };\r\n};\r\nexport const listInit = () => {\r\n    return {\r\n        type: actionTypes.LIST_INIT\r\n    };\r\n};\r\nexport const listProcess = page => {\r\n    return {\r\n        type: actionTypes.LIST_PROCESS,\r\n        page\r\n    };\r\n};\r\nexport const listSuccess = data => {\r\n    return {\r\n        type: actionTypes.LIST_SUCCESS,\r\n        data\r\n    };\r\n};\r\nexport const listFail = error => {\r\n    return {\r\n        type: actionTypes.LIST_FAIL,\r\n        error\r\n    };\r\n};","import { put } from \"redux-saga/effects\";\r\nimport axios from \"../../axios-rick-morty\";\r\nimport * as actions from \"../actions\";\r\n\r\nexport function* listProcessSaga(action) {\r\n    yield put(actions.listInit());\r\n    try {\r\n        const response = yield axios.get(action.page);        \r\n        yield put(actions.listSuccess(response.data))\r\n    }\r\n    catch(error) {\r\n        yield put(actions.listFail(error.message));\r\n    }\r\n}\r\nexport function* autoInitListSaga() {\r\n    yield put(actions.listProcess());\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\nimport {listProcessSaga, autoInitListSaga} from './list';\r\n\r\nexport function* watchList () {\r\n    yield takeEvery(actionTypes.AUTO_INIT_LIST, autoInitListSaga)\r\n    yield takeEvery(actionTypes.LIST_PROCESS, listProcessSaga);\r\n};","import React from 'react';\r\nconst appContext = React.createContext({\r\n    characterId: null,\r\n    setCharacterId: () => {},\r\n    currentPage: null,\r\n    setCurrentPage: () => {}\r\n});\r\nexport default appContext;","import React from 'react';\r\n\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport { Card, Avatar } from 'antd';\r\nconst { Meta } = Card;\r\n\r\nexport class CardComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                style={{ width: 300, margin: '0.6rem 2.5rem 0 3rem'}}\r\n                bodyStyle={{ padding: 10 }}>\r\n                <Meta\r\n                    avatar={\r\n                        <Avatar shape=\"square\" size={54} src={this.props.img} />\r\n                    }\r\n                    title=\"Show details\"\r\n                    description={this.props.switch}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n};\r\nexport default CardComp ","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport Card from '../../components/UI/Card/Card';\r\nimport {Switch} from 'antd';\r\n\r\nexport const ListBuilder = props => {\r\n    const {characterId, setCharacterId} = useContext(AppContext);    \r\n    \r\n    const showDetails = (val) => {        \r\n        val = Number(val);\r\n        val === characterId ? setCharacterId(null) : setCharacterId(val)\r\n    };    \r\n    const avatarsArr = props.characters.map(character => {\r\n        return <li \r\n            key={character.id} \r\n            id={character.id}>\r\n            <Card\r\n                img={character.image}\r\n                switch = {\r\n                    <Switch\r\n                        id={character.id}\r\n                        checked ={characterId === character.id }\r\n                        onChange={(checked, event) => showDetails(event.target.id)}\r\n                    />\r\n                }\r\n            />\r\n        </li>\r\n    });\r\n    return(\r\n        <ul style={{listStyle: 'none', padding: 0}}>\r\n            {avatarsArr}\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(ListBuilder)","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport ListBuilder from '../../containers/List/ListBuilder';\r\nimport classes from './List.css'\r\n\r\nconst List = () => (\r\n    <Row >\r\n      <Col className={classes.List} span={24} >\r\n          <div>\r\n            <h2>Characters list</h2>\r\n          </div>\r\n          <ListBuilder />\r\n      </Col>      \r\n    </Row>\r\n);\r\nexport default List","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport classes from './Detail.css';\r\n\r\nconst Detail = props => (\r\n    <Row >\r\n        <Col span={24} className={classes.Detail} style={{display: 'flex'}}>\r\n            <img src={props.img} alt={props.name} />\r\n            <div className={classes.Spec}>\r\n                <h1>Character details</h1>\r\n                <h4>Name:</h4>\r\n                <h3>{props.name}</h3>\r\n                <h4>Species:</h4>\r\n                <h3>{props.species}</h3>\r\n                <h4>Location:</h4>\r\n                <h3>{props.location}</h3>\r\n                <h4>Gender:</h4>\r\n                <h3>{props.gender}</h3>\r\n            </div>\r\n        </Col>      \r\n  </Row>\r\n);\r\nexport default Detail","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport Detail from '../../components/Detail/Detail';\r\n\r\nexport const DetailBuilder = props => {\r\n    const {characterId} = useContext(AppContext);\r\n    const character = props.characters.find(character => character.id === characterId) \r\n    return (\r\n        !characterId || !props.loaded ? <Detail /> :\r\n        <Detail\r\n        img={character.image}\r\n        name={character.name}\r\n        species={character.species}\r\n        location={character.location.name}\r\n        gender={character.gender}\r\n        />\r\n    )\r\n};\r\nconst mapStateToprops = state => {\r\n    return {\r\n        characters : state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n};\r\nexport default connect(mapStateToprops)(DetailBuilder)","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartRender extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\" style={{ width: \"98%\" }}>\r\n                        <Chart\r\n                            options={this.props.options}\r\n                            series={this.props.series}\r\n                            type={this.props.type}\r\n                            height={this.props.height}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ChartRender;","import React , {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Chart from '../../components/UI/Charts/ApexChart';\r\n\r\nconst GraphBuilder = props => {\r\n    const [chartData, setChartData] = useState({\r\n        options: {            \r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                    distributed: true\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontSize: '16px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {                \r\n                labels: {\r\n                    trim: false,                    \r\n                },\r\n                categories: [\"Male\", \"Female\", \"Unknown\"]\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },           \r\n        series: [\r\n            {\r\n                name: \"Quantity\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    const countGender = () => {\r\n        let male = 0,\r\n            female = 0,\r\n            unknown =0\r\n        \r\n        props.characters.forEach(element => {            \r\n            if(element.gender === 'Male') male++\r\n            if(element.gender === 'Female') female++\r\n            if(element.gender === 'unknown') unknown++\r\n        });\r\n        const newSeries = [male, female, unknown]\r\n        const updatedSeries = [{\r\n            ...chartData.series[0],\r\n            data: newSeries\r\n        }];\r\n        setChartData({options: chartData.options, series: updatedSeries})\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.loaded) countGender()\r\n    }, [])\r\n\r\n    return(\r\n        <Chart \r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"250\"\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(GraphBuilder)\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport classes from './GenderGraph.css';\r\nimport GraphBuilder from '../../containers/GenderGraph/GraphBuilder';\r\n\r\nconst GenderGraph = () => (\r\n    \r\n    <Row >\r\n        <Col span={24} className={classes.GenderGraph} >\r\n            <GraphBuilder />\r\n            <h4>This section displays the current List’s gender totals.</h4>\r\n        </Col>      \r\n  </Row>\r\n);\r\nexport default GenderGraph","import React from 'react'\r\nimport classes from './Header.css';\r\nimport { Button, Icon } from 'antd';\r\n\r\nconst Header = props => (\r\n    <div className={classes.Header}>\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>        \r\n        <div>\r\n            <Button.Group >\r\n                <Button\r\n                    type=\"dashed\"\r\n                    disabled={props.firstPage}\r\n                    onClick={() => props.changePage(null, 'prev')}>\r\n                    <Icon type=\"left\" />\r\n                    Prev\r\n                </Button>\r\n                <Button\r\n                    type=\"dashed\"\r\n                    disabled={props.lastPage}\r\n                    onClick={() => props.changePage('next')}>\r\n                    Next\r\n                    <Icon type=\"right\" />\r\n                </Button>\r\n            </Button.Group>\r\n        </div>\r\n        <div>\r\n            <span>Total characters:</span>\r\n            <span>{props.total}</span>\r\n            <span>Total pages:</span>\r\n            <span>{props.totalPages}</span>\r\n            <span>Current page:</span>\r\n            <span>{props.currentPage}</span>\r\n        </div>        \r\n    </div>\r\n);\r\nexport default Header","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport * as actions from '../../store/actions'\r\nimport Header from '../../components/Header/Header';\r\n\r\nconst HeaderBuilder = props => {\r\n    const {currentPage, setCurrentPage, setCharacterId} = useContext(AppContext);\r\n    const onChangePage = (next, prev) => {\r\n        if(next) {\r\n            props.listProcessHandler(`?page=${currentPage + 1}`);\r\n            setCharacterId((currentPage + 1) * 20 - 19);\r\n            setCurrentPage(currentPage +1);           \r\n        };\r\n        if(prev) {\r\n            props.listProcessHandler(`?page=${currentPage - 1}`);\r\n            setCharacterId((currentPage - 1) * 20 - 19);\r\n            setCurrentPage(currentPage -1);           \r\n        };\r\n    };  \r\n    \r\n    return (\r\n        <Header \r\n            title=\"THE RICK AND MORTY API\"\r\n            total={props.info.count}\r\n            currentPage={currentPage}\r\n            totalPages={props.info.pages} \r\n            changePage={onChangePage}\r\n            firstPage = {currentPage - 1 === 0}\r\n            lastPage = {props.info.pages - currentPage === 0}\r\n        />\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return{\r\n        info: state.listReducer.info\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        listProcessHandler: (page) => dispatch(actions.listProcess(page))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderBuilder)","import React from 'react';\r\nimport classes from './Layout.css';\r\nimport List from '../../components/List/List';\r\nimport Detail from '../../containers/Detail/DetailBuilder';\r\nimport GenderGraph from '../../components/GenderGraph/GenderGraph';\r\nimport Header from '../../containers/Header/HeaderBuilder';\r\n\r\nconst Layout = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className={classes.Layout}>\r\n                    <List />\r\n                <div>\r\n                    <Detail />\r\n                    <GenderGraph />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Layout;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/actions';\nimport AppContext from '../context/app-context';\nimport classes from './App.css';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Layout from '../hoc/Layout/Layout';\n\nconst App = props => {\n  \n  useEffect(()=> {\n    props.autoInitListHandler()\n    // eslint-disable-next-line\n  }, []);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [characterId, setCharacterId] = useState(1);\n\n  const setId = (id) => {\n    setCharacterId(id)\n  };\n  const setPage = (page) => {\n    setCurrentPage(page)\n  };\n  \n  return (\n    <div className={classes.App} >\n      {props.isLoading ? <Spinner /> : \n      <AppContext.Provider value={{\n        characterId,\n        setCharacterId: setId,\n        currentPage,\n        setCurrentPage: setPage\n        }}>\n        <Layout />\n      </AppContext.Provider>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.listReducer.isLoading\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoInitListHandler: ()=> dispatch(actions.autoInitList())\n  }\n};\nexport default connect(mapStateToProps ,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport listReducer from './store/reducers/list';\nimport {watchList} from './store/sagas';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({listReducer});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchList);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Detail\":\"Detail__Detail__28Up6\",\"Spec\":\"Detail__Spec__35t1n\"};"],"sourceRoot":""}