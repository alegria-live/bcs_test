{"version":3,"sources":["containers/App.css","components/UI/Spinner/Spinner.css","hoc/Layout/Layout.css","components/List/List.css","store/actions/actionTypes.js","store/reducers/list.js","axios-rick-morty.js","store/actions/list.js","store/sagas/list.js","store/sagas/index.js","context/character-context.js","components/UI/Spinner/Spinner.js","components/UI/Card/Card.js","containers/List/ListBuilder.js","components/List/List.js","components/Detail/Detail.js","containers/Detail/DetailBuilder.js","hoc/Layout/Layout.js","containers/App.js","serviceWorker.js","index.js","components/Detail/Detail.css"],"names":["module","exports","App","Loader","load2","Layout","List","AUTO_INIT_LIST","LIST_PROCESS","initialState","isLoading","loaded","error","info","results","list","listReducer","state","arguments","length","undefined","action","type","listInit","Object","objectSpread","listSuccess","listFail","axios_rick_morty","axios","baseURL","listProcess","param","actionTypes","data","listProcessSaga","autoInitListSaga","response","regenerator_default","a","wrap","_context","prev","next","put","actions","page","sent","t0","stop","_marked","_context2","_marked2","watchList","takeEvery","sagas_marked","character_context","React","characterId","setCharacterId","Spinner_Spinner","spinner","react_default","createElement","className","classes","Meta","Card","card","style","width","marginTop","bodyStyle","padding","avatar","shape","size","src","this","props","img","title","description","switch","Component","connect","mapStateToProps","characters","ListBuilder","_useContext","useContext","avatarsArr","character","key","id","image","es_switch","checked","onChange","event","val","Number","showDetails","listStyle","components_List_List","row","col","span","List_ListBuilder","components_Detail_Detail","Detail","alt","Spec","name","species","location","gender","mapStateToprops","DetailBuilder","hoc_Layout_Layout","Detail_DetailBuilder","mapDispatchToProps","dispatch","autoInitListHandler","react","_useState","useState","_useState2","slicedToArray","Provider","value","setId","isLocalhost","Boolean","window","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","composeEnhancers","redux","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","redux_thunk_es","app","es","src_containers_App","ReactDOM","document","URL","process","href","publicUrl","origin","concat","fetch","contentType","checkValidServiceWorker"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,IAAA,wCCAlBF,EAAAC,QAAA,CAAkBE,OAAA,yBAAAC,MAAA,8CCAlBJ,EAAAC,QAAA,CAAkBI,OAAA,8CCAlBL,EAAAC,QAAA,CAAkBK,KAAA,yMCDLC,EAAN,iBAEMC,EAAN,eCADC,EAAe,CACjBC,WADiB,EAEjBC,QAFiB,EAGjBC,OAHiB,EAIjBC,KAJiB,GAKjBC,QALJ,IAuCAC,EARMC,WAAeC,MAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBT,EAAcY,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAPC,MACI,IDlCD,YCkC6B,OAzB9BC,SAAWN,EAAAI,GACb,OAAAG,OAAAC,EAAA,EAAAD,CAAA,GAAAP,EAAA,CAEIP,WAFJ,IAwBuCa,CAAQN,GAC3C,IDjCD,eCiCgC,OApBjCS,SAAcT,EAAAI,GAChB,OAAAG,OAAAC,EAAA,EAAAD,CAAA,GAAAP,EAAA,CAEIP,WAFJ,EAGIC,QAHJ,EAIIE,KAAMQ,OAJVR,KAKIC,QAASO,OALbP,UAmB0CY,CAAWT,EAAlBI,GAC/B,IDjCD,YCiC6B,OAZ9BM,SAAWV,EAAAI,GACb,OAAAG,OAAAC,EAAA,EAAAD,CAAA,GAAAP,EAAA,CAEIP,WAFJ,EAGIC,QAHJ,EAIIC,MAAOS,OAJXT,QAWuCe,CAAQV,EAAfI,GAC5B,QAAS,OAJbJ,sCC5BJW,SAJiBC,SAAa,CAC1BC,QADJ,+CCKaP,aACT,MAAO,CACHD,KHRD,cGWMS,WAAcC,GACvB,MAAO,CACHV,KAAMW,EACND,MAFJA,IAKSN,WAAcQ,GACvB,MAAO,CACHZ,KHjBD,eGkBCY,KAFJA,IAKSP,WAAWf,GACpB,MAAO,CACHU,KHtBD,YGuBCV,MAFJA,eCrBauB,cAUAC,GAVV,SAAAD,EAAAd,GAAA,IAAAgB,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAIC,KADP,OAGkB,OAHlBJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBd,MAAUR,EAAhByB,MAHlB,OAIC,OADMT,EAHPI,EAAAM,KAAAN,EAAAE,KAAA,EAIOC,YAAIC,EAAoBR,EAA9BH,OAJD,OAAAO,EAAAE,KAAA,iBAOC,OAPDF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAAAA,EAAAE,KAAA,GAOOC,YAAIC,IAAVG,KAPD,yBAAAP,EAAAQ,SAAAC,EAAA,eAUA,SAAAd,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OACH,OADGQ,EAAAR,KAAA,EACGC,YAAIC,KADP,wBAAAM,EAAAF,SAAAG,kBCVUC,GAAV,SAAAA,IAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGW,YAAUrB,EAAhBG,GADG,OAEH,OAFGK,EAAAE,KAAA,EAEGW,YAAUrB,EAAhBE,GAFG,wBAAAM,EAAAQ,SAAAM,uBCCPC,EAJyBC,kBAAoB,CACzCC,YADyC,KAEzCC,eAAgB,mDCKpBC,EAJMC,WAAU,OACZC,EAAAvB,EAAAwB,cAAA,OAAKC,UAAWC,IAAhB9D,QADY,mKCFR+D,EAASC,IAATD,KAoBRC,mLAfQ,OACIL,EAAAvB,EAAAwB,cAAAK,EAAA,GACIC,MAAO,CAAEC,MAAF,IAAcC,UADzB,GAEIC,UAAW,CAAEC,QAFjB,KAGIX,EAAAvB,EAAAwB,cAAAG,EAAA,CACIQ,OACIZ,EAAAvB,EAAAwB,cAAAW,EAAA,GAAQC,MAAR,SAAuBC,KAAvB,GAAiCC,IAAKC,KAAAC,MAF9CC,MAIIC,MAJJ,eAKIC,YAAaJ,KAAAC,MATzBI,iBAHe1B,IAAM2B,WCqCdC,cALTC,SAAkBrE,GACpB,MAAO,CACHsE,WAAYtE,cADhBH,UAIWuE,CAnCTG,SAAcT,GAAS,IAAAU,EACaC,qBADblC,GAClBE,EADkB+B,EAAA/B,YACLC,EADK8B,EAAA9B,eAMnBgC,EAAaZ,iBAAqB,SAAAa,GACpC,OAAO9B,EAAAvB,EAAAwB,cAAA,MACH8B,IAAKD,EADFE,GAEHA,GAAIF,EAFDE,IAGHhC,EAAAvB,EAAAwB,cAAAI,EAAA,CACIa,IAAKY,EADTG,MAEIZ,OACIrB,EAAAvB,EAAAwB,cAAAiC,EAAA,GACIF,GAAIF,EADRE,GAEIG,QAAUvC,IAAgBkC,EAF9BE,GAGII,SAAU,SAAAD,EAAAE,GAAA,OAdVC,EAc0CD,SAAhCL,GAb1BM,EAAMC,OAAND,QACsBzC,EAAtByC,cAFEE,IAAcF,UAqBpB,OACItC,EAAAvB,EAAAwB,cAAA,MAAIM,MAAO,CAACkC,UAAD,OAAoB9B,QAA/B,IADJkB,wBCjBJa,GAPMlG,WAAO,OACTwD,EAAAvB,EAAAwB,cAAA0C,EAAA,OACE3C,EAAAvB,EAAAwB,cAAA2C,EAAA,GAAK1C,UAAWC,KAAhB3D,KAA8BqG,KAA9B,IACI7C,EAAAvB,EAAAwB,cAAA6C,EAHG,6BCmBbC,GApBMC,SAAS/B,GAAK,OAChBjB,EAAAvB,EAAAwB,cAAA0C,EAAA,OACI3C,EAAAvB,EAAAwB,cAAA2C,EAAA,GAAKC,KAAL,GAAe3C,UAAWC,KAA1B6C,QACIhD,EAAAvB,EAAAwB,cAAA,OAAKc,IAAKE,EAAVC,IAAqB+B,IADzB,KAEIjD,EAAAvB,EAAAwB,cAAA,OAAKC,UAAWC,KAAhB+C,MACIlD,EAAAvB,EAAAwB,cAAA,UADJ,qBAEID,EAAAvB,EAAAwB,cAAA,UAFJ,SAGID,EAAAvB,EAAAwB,cAAA,UAAKgB,EAHTkC,MAIInD,EAAAvB,EAAAwB,cAAA,UAJJ,YAKID,EAAAvB,EAAAwB,cAAA,UAAKgB,EALTmC,SAMIpD,EAAAvB,EAAAwB,cAAA,UANJ,aAOID,EAAAvB,EAAAwB,cAAA,UAAKgB,EAPToC,UAQIrD,EAAAvB,EAAAwB,cAAA,UARJ,WASID,EAAAvB,EAAAwB,cAAA,UAAKgB,EAbDqC,YCsBL/B,eANTgC,SAAkBpG,GACpB,MAAO,CACHsE,WAAatE,cADVH,QAEHH,OAAQM,cAFZN,SAKW0E,CArBTiC,SAAgBvC,GAAS,IACpBrB,EAAegC,qBADKlC,GAAAE,YAErBkC,EAAYb,aAAiBrB,EAAnC,GAEA,OACIA,GAAiBqB,EAAjBpE,OACAmD,EAAAvB,EAAAwB,cAAA8C,GAAA,CACA7B,IAAKY,EADLG,MAEAkB,KAAMrB,EAFNqB,KAGAC,QAAStB,EAHTsB,QAIAC,SAAUvB,WAJVqB,KAKAG,OAAQxB,EAPZwB,SACoCtD,EAAAvB,EAAAwB,cAAA8C,GAAhC,QCKRU,GAVMlH,WACF,OACIyD,EAAAvB,EAAAwB,cAAA,OAAKC,UAAWC,IAAhB5D,QACQyD,EAAAvB,EAAAwB,cAAAyC,GADR,MAEI1C,EAAAvB,EAAAwB,cAAA,WACID,EAAAvB,EAAAwB,cAAAyD,GAJZ,SCoCWnC,eAXTC,SAAkBrE,GACtB,MAAO,CACLP,UAAWO,cADbP,YAKI+G,SAAqBC,GACzB,MAAO,CACLC,oBAAqB,kBAAKD,EXpCnB,CACHpG,KAAMW,OWsCCoD,CAlCTnF,SAAM6E,GAEVvD,OAAAoG,EAAA,UAAApG,CAAU,WACRuD,yBADF,IAFmB,IAAA8C,EAOmBC,mBAPnB,GAAAC,EAAAvG,OAAAwG,EAAA,EAAAxG,CAAAqG,EAAA,GAOZnE,EAPYqE,EAAA,GAOCpE,EAPDoE,EAAA,GAYnB,OACEjE,EAAAvB,EAAAwB,cAAA,OAAKC,UAAWC,IAAhB/D,KACG6E,YAAkBjB,EAAAvB,EAAAwB,cAAAH,EAAlBmB,MACDjB,EAAAvB,EAAAwB,cAACP,EAADyE,SAAA,CAA2BC,MAAO,CAACxE,YAADA,EAAcC,eAP9CwE,SAAQrC,GACZnC,QAOIG,EAAAvB,EAAAwB,cAAAwD,GAJN,UCRIa,GAAcC,QAClBC,kDAEEA,0BAEAA,+BALJ,2DA4CA,SAAAC,GAAAC,EAAAC,GACEC,UAAAC,cAAAC,SAAAJ,GAAAK,KAEQ,SAAAC,GACJA,EAAAC,cAA6B,WAC3B,IAAMC,EAAmBF,EAAzBG,WACA,MAAID,IAGJA,EAAAE,cAAiC,WAC/B,cAAIF,UACEN,wBAAJS,YAIEC,YACE,iHAKEX,GAAUA,EAAdY,UACEZ,gBAMFW,kDAGIX,GAAUA,EAAda,WACEb,sBA/Bdc,MAsCS,SAAA3I,GACLwI,+DCnFN,IAAMI,GAANC,EAAA,EAKMC,GAAcC,YAAgB,CAAC3I,YAArCD,IACM6I,GAAiBC,cACjBC,GAAQC,YAAWL,GAEvBF,GAAiBQ,YAAeC,EAAA,EAFlCL,MAKAA,UAEA,IAAMM,GACFpG,EAAAvB,EAAAwB,cAAAoG,EAAA,GAAUL,MAAVA,IACIhG,EAAAvB,EAAAwB,cAAAqG,GAFR,OAKAC,cAAqBC,wBAArBD,SDVO,SAAA5B,GACL,GAA6C,kBAA7CC,UAA2E,CAGzE,GADkB,IAAA6B,IAAQC,YAAwBlC,gBAAlDmC,MACIC,SAAqBpC,gBAAzBqC,OAIE,OAGFrC,+BAAgC,WAC9B,IAAME,EAAK,GAAAoC,OAAMJ,YAAjB,sBAEApC,IAgEN,SAAAI,EAAAC,GAEEoC,cACQ,SAAAxI,GAEJ,IAAMyI,EAAczI,cAApB,gBAEEA,gBACCyI,UAFH,IAE0BA,wBAGxBpC,mCAAmC,SAAAI,GACjCA,oBAA+B,WAC7BR,6BAKJC,GAAeC,EAAfD,KAhBNsC,MAmBS,WACLzB,+EApFE2B,CAAuBvC,EAAvBuC,GAIArC,mCAAmC,WACjCU,YACE,gHAMJb,GAAeC,EAAfD,MCjBRI,uBChCA3I,EAAAC,QAAA,CAAkB6G,OAAA,wBAAAE,KAAA","file":"static/js/main.68b8dd58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List__List__1YcFy\"};","export const AUTO_INIT_LIST = 'AUTO_INIT_LIST'\r\nexport const LIST_INIT = 'LIST_INIT'\r\nexport const LIST_PROCESS = 'LIST_PROCESS'\r\nexport const LIST_SUCCESS = 'LIST_SUCCESS'\r\nexport const LIST_FAIL = 'LIST_FAIL'\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    loaded: false,\r\n    error: false,\r\n    info: {},\r\n    results: []\r\n};\r\n\r\nconst listInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: true\r\n    }\r\n};\r\nconst listSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        info: action.data.info,\r\n        results: action.data.results\r\n    }\r\n};\r\nconst listFail = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        loaded: true,\r\n        error: action.data.error\r\n    }\r\n};\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LIST_INIT: return listInit(state, action);\r\n        case actionTypes.LIST_SUCCESS: return listSuccess(state, action);\r\n        case actionTypes.LIST_FAIL: return listFail(state, action);\r\n        default: return state\r\n    }\r\n};\r\nexport default listReducer","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api/character/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\n\r\nexport const autoInitList = () => {\r\n    return {\r\n        type: actionTypes.AUTO_INIT_LIST\r\n    };\r\n};\r\nexport const listInit = () => {\r\n    return {\r\n        type: actionTypes.LIST_INIT\r\n    };\r\n};\r\nexport const listProcess = param => {\r\n    return {\r\n        type: actionTypes.LIST_PROCESS,\r\n        param\r\n    };\r\n};\r\nexport const listSuccess = data => {\r\n    return {\r\n        type: actionTypes.LIST_SUCCESS,\r\n        data\r\n    };\r\n};\r\nexport const listFail = error => {\r\n    return {\r\n        type: actionTypes.LIST_FAIL,\r\n        error\r\n    };\r\n};","import { put } from \"redux-saga/effects\";\r\nimport axios from \"../../axios-rick-morty\";\r\nimport * as actions from \"../actions\";\r\n\r\nexport function* listProcessSaga(action) {\r\n    yield put(actions.listInit());\r\n    try {\r\n        const response = yield axios.get(action.page);\r\n        yield put(actions.listSuccess(response.data))\r\n    }\r\n    catch(error) {\r\n        yield put(actions.listFail(error));\r\n    }\r\n}\r\nexport function* autoInitListSaga() {\r\n    yield put(actions.listProcess());\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\nimport {listProcessSaga, autoInitListSaga} from './list';\r\n\r\nexport function* watchList () {\r\n    yield takeEvery(actionTypes.AUTO_INIT_LIST, autoInitListSaga)\r\n    yield takeEvery(actionTypes.LIST_PROCESS, listProcessSaga);\r\n};","import React from 'react';\r\nconst characterContext = React.createContext({\r\n    characterId: null,\r\n    setCharacterId: () => {},\r\n});\r\nexport default characterContext;","import React from 'react';\r\n\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport { Card, Avatar } from 'antd';\r\nconst { Meta } = Card;\r\n\r\nclass CardComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                style={{ width: 300, marginTop: 6 }}\r\n                bodyStyle={{ padding: 10 }}>\r\n                <Meta\r\n                    avatar={\r\n                        <Avatar shape=\"square\" size={54} src={this.props.img} />\r\n                    }\r\n                    title=\"Show details\"\r\n                    description={this.props.switch}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n};\r\nexport default CardComp ","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CharacterContext from '../../context/character-context';\r\nimport Card from '../../components/UI/Card/Card';\r\nimport {Switch} from 'antd';\r\n\r\nconst ListBuilder = props => {\r\n    const {characterId, setCharacterId} = useContext(CharacterContext);\r\n    const showDetails = (val) => {        \r\n        val = Number(val);        \r\n        val === characterId ? setCharacterId(null) : setCharacterId(val)\r\n    };    \r\n    const avatarsArr = props.characters.map(character => {\r\n        return <li \r\n            key={character.id} \r\n            id={character.id}>\r\n            <Card\r\n                img={character.image}      \r\n                switch = {\r\n                    <Switch\r\n                        id={character.id}\r\n                        checked ={characterId === character.id }\r\n                        onChange={(checked, event) => showDetails(event.target.id)}\r\n                    />\r\n                }\r\n            />\r\n        </li>\r\n    });\r\n\r\n    return(\r\n        <ul style={{listStyle: 'none', padding: 0}}>\r\n            {avatarsArr}\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(ListBuilder)","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport ListBuilder from '../../containers/List/ListBuilder';\r\nimport classes from './List.css'\r\n\r\nconst List = () => (\r\n    <Row>\r\n      <Col className={classes.List} span={24}>\r\n          <ListBuilder />\r\n      </Col>      \r\n    </Row>\r\n);\r\nexport default List","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport classes from './Detail.css';\r\n\r\nconst Detail = props => (\r\n    <Row >\r\n        <Col span={24} className={classes.Detail} >\r\n            <img src={props.img} alt=\"\" />\r\n            <div className={classes.Spec}>\r\n                <h1>Character details</h1>\r\n                <h4>Name:</h4>\r\n                <h3>{props.name}</h3>\r\n                <h4>Species:</h4>\r\n                <h3>{props.species}</h3>\r\n                <h4>Location:</h4>\r\n                <h3>{props.location}</h3>\r\n                <h4>Gender:</h4>\r\n                <h3>{props.gender}</h3>\r\n            </div>\r\n            \r\n            \r\n        </Col>      \r\n  </Row>\r\n);\r\nexport default Detail","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CharacterContext from '../../context/character-context';\r\nimport Detail from '../../components/Detail/Detail';\r\n\r\nconst DetailBuilder = props => {\r\n    const {characterId} = useContext(CharacterContext);\r\n    const character = props.characters[characterId-1]\r\n\r\n    return (\r\n        !characterId || !props.loaded ? <Detail /> :\r\n        <Detail\r\n        img={character.image}\r\n        name={character.name}\r\n        species={character.species}\r\n        location={character.location.name}\r\n        gender={character.gender}\r\n        />\r\n    )\r\n};\r\nconst mapStateToprops = state => {\r\n    return {\r\n        characters : state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n}\r\nexport default connect(mapStateToprops)(DetailBuilder)","import React from 'react';\r\nimport classes from './Layout.css';\r\nimport List from '../../components/List/List';\r\nimport Detail from '../../containers/Detail/DetailBuilder';\r\n\r\nconst Layout = () => {\r\n    return(\r\n        <div className={classes.Layout}>\r\n                <List />\r\n            <div>\r\n                <Detail />               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Layout;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/actions';\nimport CharacterContext from '../context/character-context';\nimport classes from './App.css';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Layout from '../hoc/Layout/Layout';\n\nconst App = props => {\n  \n  useEffect(()=> {\n    props.autoInitListHandler()\n    // eslint-disable-next-line\n  }, []);\n\n  const [characterId, setCharacterId] = useState(1);\n  const setId = (id) => {\n    setCharacterId(id)\n  }\n  \n  return (\n    <div className={classes.App} >\n      {props.isLoading ? <Spinner /> : \n      <CharacterContext.Provider value={{characterId, setCharacterId: setId}}>\n        <Layout />\n      </CharacterContext.Provider>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.listReducer.isLoading\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoInitListHandler: ()=> dispatch(actions.autoInitList())\n  }\n};\nexport default connect(mapStateToProps ,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport listReducer from './store/reducers/list';\nimport {watchList} from './store/sagas';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({listReducer});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchList);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Detail\":\"Detail__Detail__28Up6\",\"Spec\":\"Detail__Spec__35t1n\"};"],"sourceRoot":""}